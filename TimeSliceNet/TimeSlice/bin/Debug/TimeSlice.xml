<?xml version="1.0"?>
<doc>
    <assembly>
        <name>TimeSlice</name>
    </assembly>
    <members>
        <member name="T:TimeSlice.ITimeSlice">
            <summary>
            A time slice is something that has a start and an optional end.
            </summary>
        </member>
        <member name="P:TimeSlice.ITimeSlice.Start">
            <summary>
            The inclusive start date
            </summary>
        </member>
        <member name="P:TimeSlice.ITimeSlice.End">
            <summary>
            Exclusive end date.
            </summary>
            <remarks>null = "open" time slice</remarks>
        </member>
        <member name="P:TimeSlice.ITimeSlice.Duration">
            <summary>
            The duration describes the length of a time slice.
            It is null if and only if <see cref="P:TimeSlice.ITimeSlice.End"/> is null. 
            </summary>
        </member>
        <member name="T:TimeSlice.PlainTimeSlice">
            <summary>
            A plain time slice is the simplest way to model a time slice.
            </summary>
        </member>
        <member name="P:TimeSlice.PlainTimeSlice.Start">
            <summary>
            <inheritdoc cref="P:TimeSlice.ITimeSlice.Start"/>
            </summary>
        </member>
        <member name="P:TimeSlice.PlainTimeSlice.End">
            <summary>
            <inheritdoc cref="P:TimeSlice.ITimeSlice.End"/>
            </summary>
        </member>
        <member name="P:TimeSlice.PlainTimeSlice.Duration">
            <summary>
            <inheritdoc cref="P:TimeSlice.ITimeSlice.Duration"/>
            </summary>
        </member>
        <member name="M:TimeSlice.PlainTimeSlice.ToString">
            <summary>
            <inheritdoc cref="M:System.Object.ToString"/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:TimeSlice.PlainTimeSlice.Equals(System.Object)">
            <summary>
            Two time slices are identical, if <see cref="P:TimeSlice.PlainTimeSlice.Start"/> and <see cref="P:TimeSlice.PlainTimeSlice.End"/> are the same.
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:TimeSlice.PlainTimeSlice.GetHashCode">
            <inheritdoc />
        </member>
        <member name="T:TimeSlice.TimeSliceExtensions">
            <summary>
            A static class with extension methods for objects/classes that implement <see cref="T:TimeSlice.ITimeSlice"/>
            </summary>
        </member>
        <member name="M:TimeSlice.TimeSliceExtensions.IsOpen(TimeSlice.ITimeSlice)">
            <summary>
            A time slice is called "open" if it has either no end or the end is infinity.
            </summary>
            <param name="timeSlice"></param>
            <returns>true if open</returns>
        </member>
        <member name="M:TimeSlice.TimeSliceExtensions.Overlaps(TimeSlice.ITimeSlice,System.DateTimeOffset)">
            <summary>
            check if a datetime is in side a time slice.
            </summary>
            <param name="timeSlice">any time slice</param>
            <param name="dt">a datetime</param>
            <returns>true iff <paramref name="dt"/> is inside <paramref name="timeSlice"/></returns>
        </member>
        <member name="M:TimeSlice.TimeSliceExtensions.Overlaps(TimeSlice.ITimeSlice,TimeSlice.ITimeSlice)">
            <summary>
            check if a time slice overlaps with another time slice
            </summary>
            <param name="timeSlice"></param>
            <param name="other"></param>
            <returns>true if <paramref name="timeSlice"/> and <paramref name="other"/> share a finite time span</returns>
        </member>
    </members>
</doc>
